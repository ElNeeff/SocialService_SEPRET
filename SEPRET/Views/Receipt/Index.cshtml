@model IEnumerable<SEPRET.Models.Custom.ReceiptVM>

@{
    ViewBag.Title = "Pagos";
}

<div class="row">
    <div class="col-md-12">

        <div class="alert alert-rose alert-with-icon mt-3 col-7 mx-auto" data-notify="container">
            <i class="material-icons" data-notify="icon">notifications</i>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <i class="material-icons">close</i>
            </button>
            <span data-notify="icon" class="now-ui-icons ui-1_bell-53"></span>
            <span data-notify="message">
                Si tu carrera es incorrecta, por favor actualizala dando @Html.ActionLink("click aquí", "Index", "Profile", null, new { @class = "text-black", @style = "text-decoration: underline;" }). Después vuelve a generar tu vocuher.
            </span>
        </div>

        <div class="card">
            <div class="card-header card-header-primary card-header-icon row">
                <div class="col-xl-9 col-sm-12">
                    <div class="card-icon">
                        <i class="material-icons">receipt</i>
                    </div>
                    <h4 class="card-title">Lista de pagos disponibles</h4>
                </div>

                <div class="col-xl-3 col-sm-12">

                    <div class="form-group bmd-form-group mt-4">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <div class="input-group-text"><i class="material-icons">search</i></div>
                            </div>
                            <label class="bmd-label-floating prepend-label-margin">Buscar un pago...</label>
                            <input type="text" class="form-control" id="SearchPayment">
                        </div>
                    </div>

                </div>
            </div>

            <div class="card-body">
                <div class="toolbar">
                    <!--        Here you can write extra buttons/actions for the toolbar              -->
                    <div class="row">
                        <div class="col-md-12 col-sm-12">
                            <ul class="nav nav-pills nav-pills-rose mb-3" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link disabled text-rose" data-toggle="tab" role="tablist">
                                        Ir a:
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a id="MyPayment" class="filter nav-link active" data-toggle="tab" role="tablist" onclick="ReceiptList();" style="cursor: pointer;">
                                        Pagos realizados
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a id="PaymentList" class="filter nav-link" data-toggle="tab" role="tablist" onclick="PaymentList('PaymentList', '');" style="cursor: pointer;">
                                        Realizar un pago
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!-- end content-->
        </div>
        <!--  end card  -->
        <div class="alert alert-primary alert-with-icon" data-notify="container">
            <i class="material-icons" data-notify="icon">notifications</i>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <i class="material-icons">close</i>
            </button>
            <span data-notify="icon" class="now-ui-icons ui-1_bell-53"></span>
            <span data-notify="message">
                Se recomienda no doblar el ticket que recibes al momento de ralizar el pago en el banco, ya que se puede perder información del mismo.
            </span>
        </div>

        <div class="row text-center" id="ReceiptContainer">
            @if (Model.Any())
            {
                foreach (var item in Model)
                {
                    <div class="col-sm-12 col-md-6 col-lg-6 col-xl-4 d-flex align-items-stretch mb-0" id="@item.Id">
                        <div class="card card-product" data-count="0">
                            <div onclick="Zoom('@item.Image', '@item.Voucher');" class="card-header card-header-image" data-header-animation="true" style="cursor:pointer;">
                                <img class="img" src="@(HttpContext.Current.Request.Url.AbsolutePath.Contains("SEPRET") ? string.Concat("/SEPRET/", item.Image) : item.Image)" onerror="this.onerror=null; this.src='@Href("~/Assets/img/receipts/Image404.jpg")'">
                            </div>
                            <div class="card-body">
                                <div class="card-actions text-center mt-2">
                                    <button type="button" class="btn btn-danger btn-link fix-broken-card">
                                        <i class="material-icons">build</i>
                                        (╬☉д⊙) ¡Repáralo!
                                    </button>
                                    @if (item.Active)
                                    {
                                        switch (item.PhaseId)
                                        {
                                            case 1:
                                                <button onclick="AddEditReceipt(@item.PaymentId, @item.Id);" type="button" class="btn btn-info btn-link" rel="tooltip" data-placement="left" data-html="true" title="Editar información del pago para reenvio">
                                                    <i class="material-icons text-large">assignment_return</i>
                                                </button>
                                                <div class="progress mt-3" style="height: 15px;">
                                                    <div class="progress-bar progress-bar-striped progress-bar-danger progress-bar-animated font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" rel="tooltip" data-placement="left" title="El pago fué rechazado">Etapa 1</div>
                                                    <div class="progress-bar progress-bar-striped progress-bar-gray progress-bar-animated font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" rel="tooltip" data-placement="left" title="Aceptado">Etapa 2</div>
                                                    <div class="progress-bar progress-bar-striped progress-bar-gray progress-bar-animated font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" rel="tooltip" data-placement="left" title="Facturado">Etapa 3</div>
                                                </div>
                                                break;
                                            case 2:
                                                <button onclick="AcceptReceipt(@item.Id);" type="button" class="btn btn-info btn-link" rel="tooltip" data-placement="left" title="Pago en revisión, recibirás un correo electrónico cuando sea atendido">
                                                    <i class="material-icons text-large">pending_actions</i>
                                                </button>
                                                <div class="progress mt-3" style="height: 15px;">
                                                    <div class="progress-bar progress-bar-striped progress-bar-info progress-bar-animated font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" rel="tooltip" data-placement="left" title="En revisión">Etapa 1</div>
                                                    <div class="progress-bar progress-bar-striped progress-bar-gray progress-bar-animated font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" rel="tooltip" data-placement="left" title="Aceptado">Etapa 2</div>
                                                    <div class="progress-bar progress-bar-striped progress-bar-gray progress-bar-animated font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" rel="tooltip" data-placement="left" title="Facturado">Etapa 3</div>
                                                </div>
                                                break;
                                            case 3:
                                                <button type="button" class="btn btn-info btn-link" rel="tooltip" data-placement="left" title="Pago en proceso de facturación, recibirás un correo electrónico cuando sea atendido">
                                                    <i class="material-icons text-large">assignment</i>
                                                </button>
                                                <div class="progress mt-3" style="height: 15px;">
                                                    <div class="progress-bar progress-bar-striped progress-bar-success progress-bar-animated font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" rel="tooltip" data-placement="left" title="En revisión">Etapa 1</div>
                                                    <div class="progress-bar progress-bar-striped progress-bar-success progress-bar-animated font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" rel="tooltip" data-placement="left" title="Aceptado">Etapa 2</div>
                                                    <div class="progress-bar progress-bar-striped progress-bar-info progress-bar-animated font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" rel="tooltip" data-placement="left" title="Facturado">Etapa 3</div>
                                                </div>
                                                break;
                                            case 4:
                                                <button class="btn btn-success btn-link" rel="tooltip" data-placement="left" title="Pago concluido éxitosamente.">
                                                    <i class="material-icons text-large">assignment_turned_in</i>
                                                </button>
                                                <div class="progress mt-3" style="height: 15px;">
                                                    <div class="progress-bar progress-bar-success progress-bar-success font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuemax="5" rel="tooltip" data-placement="left" title="En revisión">Etapa 1</div>
                                                    <div class="progress-bar progress-bar-success progress-bar-success font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuemax="95" rel="tooltip" data-placement="left" title="Aceptado">Etapa 2</div>
                                                    <div class="progress-bar progress-bar-success progress-bar-success font-weight-bold" role="progressbar" style="width: 33.33%" aria-valuemax="100" rel="tooltip" data-placement="left" title="Facturado">Etapa 3</div>
                                                </div>
                                                break;
                                            default:
                                                <h1>@item.PhaseId</h1>
                                                break;
                                        }
                                    }
                                    else
                                    {
                                        <button class="btn btn-info btn-link" disabled rel="tooltip" data-placement="left" title="Deshacer eliminar">
                                            <i class="material-icons text-large">restore_from_trash</i>
                                        </button>
                                    }
                                </div>
                                <div class="mt-4">
                                    <h4 class="card-title mt-5">
                                        @item.PersonName
                                    </h4>
                                    <div class="card-description">
                                        <p class="mb-0">@item.Enrollment</p>
                                        <p class="mb-0">@item.Email</p>
                                        <p>@item.Career</p>
                                        <p class="text-center mb-0">@item.PaymentName</p>
                                        <p>Recibido el: <b>@item.TimeCreatedFormatted</b></p>
                                        @if (!string.IsNullOrEmpty(item.RejectDescription) && item.PhaseId == 1)
                                        {<small class="text-muted text-warning">Motivo de rechazo:</small><p class="text-danger font-weight-bold">@item.RejectDescription</p>}
                                    </div>

                                </div>
                            </div>
                            <div class="card-footer">
                                <div class="price">
                                    <h4>@item.PriceFormatted</h4>
                                </div>
                                <div class="stats">
                                    <p class="card-category"><i class="material-icons">receipt</i> @item.MethodName: @item.Voucher</p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="info text-center">
                    <div class="icon icon-primary">
                        <i class="material-icons">notification_important</i>
                    </div>
                    <h4 class="info-title">¡Vaya!</h4>
                    <p>Parece que aún no has realizado ningún pago, selecciona <b>REALIZAR UN PAGO</b> en la barra de navegación para comenzar.</p>
                </div>
                <script>
                    document.getElementById('Pages').style.display = 'none';
                </script>
            }
        </div>

        <div class="row mt-5" id="PaymentContainer" style="display:none;">
        </div>
    </div>
    <!-- end col-md-12 -->
</div>


<div id="ModalContainer" style="margin-top: -50px">

</div>

@section scripts{
    <script>
        $(() => {
            $('#SearchPayment').keyup(function () {
                var filter = $('a.filter.nav-link.active').attr('id');
                var keyword = $(this).val();
                if (filter == 'PaymentList') {
                    PaymentList(filter, keyword);
                } else {
                    ReceiptList(keyword);
                }
            });
        })

        Voucher = (PaymentId, Name) => {
            $('#Voucher-'+PaymentId).removeClass('btn-outline-primary').addClass('btn-outline-info').html('Procesando...');
            fetch("@Url.Action("Voucher", "Receipt")", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json; charset=UTF-8'
                },
                body: JSON.stringify({ PaymentId: PaymentId })
            })
                .then(response => response.blob())
                .then(blob => {
                    $('#Voucher-' + PaymentId).removeClass('btn-outline-info').addClass('btn-outline-success').html('Generado exitosamente');
                    // It is necessary to create a new blob object with mime-type explicitly set
                    // otherwise only Chrome works like it should
                    var newBlob = new Blob([blob], { type: "application/pdf" });

                    // IE doesn't allow using a blob object directly as link href
                    // instead it is necessary to use msSaveOrOpenBlob
                    if (window.navigator && window.navigator.msSaveOrOpenBlob) {
                        window.navigator.msSaveOrOpenBlob(newBlob);
                        return;
                    }

                    // For other browsers:
                    // Create a link pointing to the ObjectURL containing the blob.
                    const data = window.URL.createObjectURL(newBlob);
                    var link = document.createElement('a');
                    link.href = data;
                    //link.setAttribute('target', '_blank');
                    link.download = 'Voucher - ' + Name + '.pdf';
                    link.click();
                    setTimeout(function () {
                        // For Firefox it is necessary to delay revoking the ObjectURL
                        window.URL.revokeObjectURL(data);
                    }, 100);
                })
                .catch(error => console.error(error))
        }

        //// DESCARGA DIRECTA
        //showFile = blob => {
        //    // It is necessary to create a new blob object with mime-type explicitly set
        //    // otherwise only Chrome works like it should
        //    var newBlob = new Blob([blob], { type: "application/pdf" });

        //    // IE doesn't allow using a blob object directly as link href
        //    // instead it is necessary to use msSaveOrOpenBlob
        //    if (window.navigator && window.navigator.msSaveOrOpenBlob) {
        //        window.navigator.msSaveOrOpenBlob(newBlob);
        //        return;
        //    }

        //    // For other browsers:
        //    // Create a link pointing to the ObjectURL containing the blob.
        //    const data = window.URL.createObjectURL(newBlob);
        //    var link = document.createElement('a');
        //    link.href = data;
        //    link.download = "file.pdf";
        //    link.click();
        //    setTimeout(function () {
        //        // For Firefox it is necessary to delay revoking the ObjectURL
        //        window.URL.revokeObjectURL(data);
        //    }, 100);
        //}

        setFileTabActive = () => {
            $('[href="#image"]').addClass('active show');
            $('[href="#image"]').attr('aria-selected', 'active');
            $('.moving-tab').css({
                'transform': 'translate3d(' + -8 + 'px, ' + 0 + 'px, 0)',
                'transition': 'all 0.5s cubic-bezier(0.29, 1.42, 0.79, 1)'
            });
            $('#method,#voucher,[href="#method"],[href="#voucher]"').removeClass('active show');
            $('#image').addClass('active show');
        };

        SaveReceipt = () => {
            let ReceiptForm = document.getElementById('ReceiptForm');
            let ReceiptData = new FormData(ReceiptForm);

            fetch("@Url.Action("Index", "Receipt")", {
                method: 'POST',
                body: ReceiptData
            })
                .then(response => response.json())
                .then(data => {
                    if (data === "emptyImage") {
                        setFileTabActive();
                        md.showNotification('bottom', 'right', 'danger', 'Debes seleccionar una imagen para poder continuar.');
                    } else {
                        let message, notificationType;
                        console.log('hey:', data);
                        switch (data) {
                            case 'emptyFile':
                                setFileTabActive();
                                notificationType = 'warning';
                                message = 'Debes seleccionar una imagen para poder continuar.';
                                break;
                            case 'notImage':
                                setFileTabActive();
                                notificationType = 'warning';
                                message = 'El archivo que seleccionaste no es una imagen.';
                                break;
                            case true:
                                $('#PaymentList').removeClass('active show');
                                $('#MyPayment').addClass('active');
                                ReceiptList('');
                                $('#AddEditReceiptModal').modal('hide');
                                notificationType = 'success';
                                message = 'El pago se ha enviado exitosamente para su revisión, recibirás una notificación por correo cuando sea procesado.';
                                break;
                            case false:
                                $('#PaymentList').removeClass('active show');
                                $('#MyPayment').addClass('active');
                                ReceiptList('');
                                $('#AddEditReceiptModal').modal('hide');
                                notificationType = 'danger';
                                message = 'Ya tienes un pago de tipo en proceso de evaluación. Verifica la sección PAGOS REALIZADOS para mayor información.';
                                break;
                            default:
                                break;
                        }
                        md.showNotification('bottom', 'right', notificationType, message);
                    }
                })
                .catch(error => console.error(error))
        }

        AddEditReceipt = (PaymentId, ReceiptId)  => {
            fetch("@Url.Action("AddEditReceipt", "Receipt")", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json; charset=UTF-8'
                },
                body: JSON.stringify({ PaymentId: PaymentId, ReceiptId: ReceiptId })
            })
                .then(response => response.text())
                .then(data => {
                    $('#ModalContainer').html(data);

                    $('.moving-tab').hide();
                    $('#AddEditReceiptModal').on('shown.bs.modal', function () {
                        Site.initMaterialWizard();
                        $('.moving-tab').show();
                        $('.btn-next').removeClass('disabled');
                    });
                    $('#AddEditReceiptModal').modal('show');
                })
                .catch(error => console.error(error))
        }

        Zoom = (imageURL, Voucher) => {
            $('#Navbar').hide();
            const viewer = new ImageViewer.FullScreenViewer({ zoomValue: 110 });
            viewer.show(imageURL, imageURL);
            $('.iv-image-view').append('<div style="z-index: 100; position: relative; margin: auto; width: 80%; padding: 10px; text-align: center;"><h1 style="font-weight: bold; color: white; text-shadow: 3px 3px 0 #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000; ">Referencia: ' + Voucher + '</h1>');
            $('.iv-fullscreen-close').on('click', function () {
                $('#Navbar').show();
            })
        }

        ReceiptList = Keyword => {
            $('#PaymentContainer').hide();
            $('#ReceiptContainer').show().html(`
                <div class="sk-chase">
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                </div>`
            );
            fetch('@Url.Action("ReceiptList", "Receipt")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json; charset=UTF-8'
                },
                body: JSON.stringify({ Keyword: Keyword })
            })
                .then(response => response.text())
                .then(data => {
                    $('#ReceiptContainer').html(data);
                })
                .catch(error => console.error(error))
        }

        PaymentList = (Filter, Keyword) => {
            $('#ReceiptContainer').hide();
            $('#PaymentContainer').show().html(`
                <div class="sk-chase">
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                </div>`
            );
            fetch("@Url.Action("PaymentList", "Receipt")", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json; charset=UTF-8'
                },
                body: JSON.stringify({ Filter: Filter, Keyword: Keyword })
            })
                .then(response => response.text())
                .then(data => {
                    $('#PaymentContainer').html(data);
                })
                .catch(error => console.error(error))
        }
    </script>
}